/**
 * Below are the colors that are used in the app. The colors are defined in the light and dark mode.
 * There are many other ways to style your app. For example, [Nativewind](https://www.nativewind.dev/), [Tamagui](https://tamagui.dev/), [unistyles](https://reactnativeunistyles.vercel.app), etc.
 */

const tintColorLight = "#0a7ea4";
const tintColorDark = "#fff";

export const mainColorLight = "#5352a0";
export const mainColorDark = "#c0bff9";

export const Colors = {
  light: {
    text: "#11181C",
    background: "#fff",
    tint: tintColorLight,
    icon: "#687076",
    tabIconDefault: "#687076",
    tabIconSelected: tintColorLight,
  },
  dark: {
    text: "#ECEDEE",
    background: "#151718",
    tint: tintColorDark,
    icon: "#9BA1A6",
    tabIconDefault: "#9BA1A6",
    tabIconSelected: tintColorDark,
  },
};

export const CustomPaperColors = {
  light: {
    primary: "rgb(89, 84, 168)",
    onPrimary: "rgb(255, 255, 255)",
    primaryContainer: "rgb(227, 223, 255)",
    onPrimaryContainer: "rgb(19, 4, 99)",
    secondary: "rgb(71, 88, 171)",
    onSecondary: "rgb(255, 255, 255)",
    secondaryContainer: "rgb(222, 225, 255)",
    onSecondaryContainer: "rgb(0, 18, 88)",
    tertiary: "rgb(154, 64, 87)",
    onTertiary: "rgb(255, 255, 255)",
    tertiaryContainer: "rgb(255, 217, 223)",
    onTertiaryContainer: "rgb(63, 0, 23)",
    error: "rgb(186, 26, 26)",
    onError: "rgb(255, 255, 255)",
    errorContainer: "rgb(255, 218, 214)",
    onErrorContainer: "rgb(65, 0, 2)",
    background: "rgb(255, 251, 255)",
    onBackground: "rgb(28, 27, 31)",
    surface: "rgb(255, 251, 255)",
    onSurface: "rgb(28, 27, 31)",
    surfaceVariant: "rgb(229, 225, 236)",
    onSurfaceVariant: "rgb(71, 70, 79)",
    outline: "rgb(120, 118, 128)",
    outlineVariant: "rgb(200, 197, 208)",
    shadow: "rgb(0, 0, 0)",
    scrim: "rgb(0, 0, 0)",
    inverseSurface: "rgb(49, 48, 52)",
    inverseOnSurface: "rgb(244, 239, 244)",
    inversePrimary: "rgb(196, 192, 255)",
    elevation: {
      level0: "transparent",
      level1: "rgb(247, 243, 251)",
      level2: "rgb(242, 238, 248)",
      level3: "rgb(237, 233, 245)",
      level4: "rgb(235, 231, 245)",
      level5: "rgb(232, 228, 243)",
    },
    surfaceDisabled: "rgba(28, 27, 31, 0.12)",
    onSurfaceDisabled: "rgba(28, 27, 31, 0.38)",
    backdrop: "rgba(48, 47, 56, 0.4)",
  },
  dark: {
    primary: "rgb(196, 192, 255)",
    onPrimary: "rgb(42, 35, 119)",
    primaryContainer: "rgb(65, 59, 142)",
    onPrimaryContainer: "rgb(227, 223, 255)",
    secondary: "rgb(185, 195, 255)",
    onSecondary: "rgb(18, 39, 123)",
    secondaryContainer: "rgb(45, 63, 146)",
    onSecondaryContainer: "rgb(222, 225, 255)",
    tertiary: "rgb(255, 177, 192)",
    onTertiary: "rgb(95, 17, 43)",
    tertiaryContainer: "rgb(124, 41, 64)",
    onTertiaryContainer: "rgb(255, 217, 223)",
    error: "rgb(255, 180, 171)",
    onError: "rgb(105, 0, 5)",
    errorContainer: "rgb(147, 0, 10)",
    onErrorContainer: "rgb(255, 180, 171)",
    background: "rgb(28, 27, 31)",
    onBackground: "rgb(229, 225, 230)",
    surface: "rgb(28, 27, 31)",
    onSurface: "rgb(229, 225, 230)",
    surfaceVariant: "rgb(71, 70, 79)",
    onSurfaceVariant: "rgb(200, 197, 208)",
    outline: "rgb(146, 143, 153)",
    outlineVariant: "rgb(71, 70, 79)",
    shadow: "rgb(0, 0, 0)",
    scrim: "rgb(0, 0, 0)",
    inverseSurface: "rgb(229, 225, 230)",
    inverseOnSurface: "rgb(49, 48, 52)",
    inversePrimary: "rgb(89, 84, 168)",
    elevation: {
      level0: "transparent",
      level1: "rgb(36, 35, 42)",
      level2: "rgb(41, 40, 49)",
      level3: "rgb(47, 45, 56)",
      level4: "rgb(48, 47, 58)",
      level5: "rgb(52, 50, 62)",
    },
    surfaceDisabled: "rgba(229, 225, 230, 0.12)",
    onSurfaceDisabled: "rgba(229, 225, 230, 0.38)",
    backdrop: "rgba(48, 47, 56, 0.4)",
  },
};
